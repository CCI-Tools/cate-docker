name: Docker builds

on:
  push:
  release:
    types: [published]


jobs:
  build-docker-images:
    runs-on: ubuntu-latest
    # Build the docker image and push to quay.io
    name: build-docker-image
    env:
      APP_NAME: cate-jupyter
      ORG_NAME: ccitools
      CATE_APP_NAME: cate
    steps:
      - name: git-checkout
        uses: actions/checkout@v2
      # Load ENV VARS from .env file
      - name: load-dotenv
        id: dotenv
        uses: falti/dotenv-action@v0.2.7
      # Get a concise release tag
      - name: get-release-tag
        id: release
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      # Print debug info
      - name: info
        id: info
        run: |
          echo "EVENT: ${{ github.event_name }}"
          echo "RELEASE_TAG: ${{ steps.release.outputs.tag }}"
          echo "CATE_VERSION: ${{ steps.dotenv.outputs.cate_version }}"
          echo "CATE_INSTALL_MODE: ${{ steps.dotenv.outputs.cate_install_mode }}"
          echo "XCUBE_INSTALL_MODE: ${{ steps.dotenv.outputs.xcube_install_mode }}"
          echo "XCUBE_VERSION: ${{ steps.dotenv.outputs.xcube_version }}"
          echo "XCUBE_CCI_INSTALL_MODE: ${{ steps.dotenv.outputs.xcube_cci_install_mode }}"
          echo "XCUBE_CCI_VERSION: ${{ steps.dotenv.outputs.xcube_cci_version }}"
          echo "INSTALL_MOOC: ${{ steps.dotenv.outputs.install_mooc }}"
          echo "JUPYTER_VERSION: ${{ steps.dotenv.outputs.jupyter_version }}"
      # Build and push docker image 'latest' to quay.io when the event is a 'push' and branch 'master'
      - uses: mr-smithers-excellent/docker-build-push@v5
        name: cate-jupyter-build-push-docker-image-latest
        if: ${{ github.event_name == 'push' && steps.release.outputs.tag == 'master'  }}
        with:
          image: ${{ env.ORG_NAME }}/${{ env.APP_NAME }}
          tags: master, latest
          dockerfile: cate-jupyter.dockerfile
          buildArgs: JUPYTER_VERSION=${{ steps.dotenv.outputs.jupyter_version }},CATE_INSTALL_MODE=${{ steps.dotenv.outputs.cate_install_mode }},CATE_VERSION=${{ steps.dotenv.outputs.cate_version }},XCUBE_INSTALL_MODE=${{ steps.dotenv.outputs.xcube_install_mode }},XCUBE_VERSION=${{ steps.dotenv.outputs.xcube_version }},XCUBE_CCI_INSTALL_MODE=${{ steps.dotenv.outputs.xcube_cci_install_mode }},XCUBE_CCI_VERSION=${{ steps.dotenv.outputs.xcube_cci_version }},INSTALL_MOOC=${{ steps.dotenv.outputs.install_mooc }}
          registry: quay.io
          username: ${{ secrets.QUAY_DOCKER_REPO_USERNAME }}
          password: ${{ secrets.QUAY_DOCKER_REPO_PASSWORD }}
      # Build and push docker release to quay.io when the event is a 'release'
      - uses: mr-smithers-excellent/docker-build-push@v5
        name: cate-jupyter-build-push-docker-image-release
        if: ${{ github.event_name == 'release' }}
        with:
          image: ${{ env.ORG_NAME }}/${{ env.APP_NAME }}
          tags: ${{ steps.release.outputs.tag }}
          dockerfile: cate-jupyter.dockerfile
          buildArgs: JUPYTER_VERSION=${{ steps.dotenv.outputs.jupyter_version }},CATE_INSTALL_MODE=${{ steps.dotenv.outputs.cate_install_mode }},CATE_VERSION=${{ steps.dotenv.outputs.cate_version }},XCUBE_INSTALL_MODE=${{ steps.dotenv.outputs.xcube_install_mode }},XCUBE_VERSION=${{ steps.dotenv.outputs.xcube_version }},XCUBE_CCI_INSTALL_MODE=${{ steps.dotenv.outputs.xcube_cci_install_mode }},XCUBE_CCI_VERSION=${{ steps.dotenv.outputs.xcube_cci_version }},INSTALL_MOOC=${{ steps.dotenv.outputs.install_mooc }}
          registry: quay.io
          username: ${{ secrets.QUAY_DOCKER_REPO_USERNAME }}
          password: ${{ secrets.QUAY_DOCKER_REPO_PASSWORD }}
      # Build and push cate docker image 'latest' to quay.io when the event is a 'push' and branch 'master'
      - uses: mr-smithers-excellent/docker-build-push@v5
        name: cate-build-push-docker-image-latest
        if: ${{ github.event_name == 'push' && steps.release.outputs.tag == 'master'  }}
        with:
          image: ${{ env.ORG_NAME }}/${{ env.CATE_APP_NAME }}
          tags: master, latest
          dockerfile: cate.Dockerfile
          buildArgs: CATE_INSTALL_MODE=${{ steps.dotenv.outputs.cate_install_mode }},CATE_VERSION=${{ steps.dotenv.outputs.cate_version }},XCUBE_INSTALL_MODE=${{ steps.dotenv.outputs.xcube_install_mode }},XCUBE_VERSION=${{ steps.dotenv.outputs.xcube_version }},XCUBE_CCI_INSTALL_MODE=${{ steps.dotenv.outputs.xcube_cci_install_mode }},XCUBE_CCI_VERSION=${{ steps.dotenv.outputs.xcube_cci_version }},INSTALL_MOOC=${{ steps.dotenv.outputs.install_mooc }}
          registry: quay.io
          username: ${{ secrets.QUAY_DOCKER_REPO_USERNAME }}
          password: ${{ secrets.QUAY_DOCKER_REPO_PASSWORD }}
      # Build and push cate docker release to quay.io when the event is a 'release'
      - uses: mr-smithers-excellent/docker-build-push@v5
        name: cate-build-push-docker-image-release
        if: ${{ github.event_name == 'release' }}
        with:
          image: ${{ env.ORG_NAME }}/${{ env.CATE_APP_NAME }}
          tags: ${{ steps.release.outputs.tag }}
          dockerfile: cate.Dockerfile
          buildArgs: CATE_INSTALL_MODE=${{ steps.dotenv.outputs.cate_install_mode }},CATE_VERSION=${{ steps.dotenv.outputs.cate_version }},XCUBE_INSTALL_MODE=${{ steps.dotenv.outputs.xcube_install_mode }},XCUBE_VERSION=${{ steps.dotenv.outputs.xcube_version }},XCUBE_CCI_INSTALL_MODE=${{ steps.dotenv.outputs.xcube_cci_install_mode }},XCUBE_CCI_VERSION=${{ steps.dotenv.outputs.xcube_cci_version }},INSTALL_MOOC=${{ steps.dotenv.outputs.install_mooc }}
          registry: quay.io
          username: ${{ secrets.QUAY_DOCKER_REPO_USERNAME }}
          password: ${{ secrets.QUAY_DOCKER_REPO_PASSWORD }}